extends layout

block content
  h1 #{title}
  div
    a(href="/") &laquo; Back
  br

  if saved
    p.alert-success Saved Successfully!

  if errors
   ul.alert-danger
    for error in errors.errors
     li!= error.msg

  form#edit-form(method='POST' action='')
    input#body(type='hidden' name='body' value='')
    input#body(type='hidden' name='id' value=(article ? article.id : ""))

    div.form-check.form-group
      input#published.form-check-input(type='checkbox', name='published', value='1', checked=(article ? article.published : false))
      label.form-check-label(for='published') Published:      
    div.form-group
      label(for='title') Title*:
      input#title.form-control(type='text', placeholder='Article Title' name='title' value=(article ? article.title : ""))
    div.form-group
      label(for='author') Author*:
      input#author.form-control(type='text', placeholder='Article Author' name='author' value=(article ? article.author : ""))
    div.form-group
      label(for='body') Body*:
      div#articleBody.form-control(name='body' rows='30') !{(article ? article.body : "")}

    div.form-group
      label(for='previous') Previous Article:
      br
      select(name='previous')
        option(value=0) (none)
        each listArticle in articleList
          option(value=listArticle.id, selected=listArticle.id == article.previous_id) #{listArticle.title}
    div.form-group
      label(for='next') Next Article:
      br
      select(name='next')
        option(value=0) (none)
        each listArticle in articleList
          option(value=listArticle.id, selected=listArticle.id == article.next_id) #{listArticle.title}

    button.btn.btn-primary(type='submit') Submit

block scripts
  script.
    console.log(!{JSON.stringify(article)})
    console.log("Previous", !{JSON.stringify(article.getPreviousId())} );    

    var toolbarOptions = [
      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
      ['blockquote', 'code-block'],

      [{ 'header': 1 }, { 'header': 2 }],               // custom button values
      [{ 'list': 'ordered'}, { 'list': 'bullet' }],
      [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
      [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
      [{ 'direction': 'rtl' }],                         // text direction

      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
      [ 'link', 'image', 'video', 'formula' ],          // add's image support
      [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
      [{ 'font': [] }],
      [{ 'align': [] }],

      ['clean']                                         // remove formatting button
    ];

    // initializes quill
    var quill = new Quill('#articleBody', {
      theme: 'snow',
      modules: {
        toolbar: toolbarOptions
      }
    });

    // adds quill-based content to actual form, since it exists in a div 
    function updateBody(ev) {    
      document.getElementById("body").value = quill.root.innerHTML;
    }
    const form = document.getElementById("edit-form");
    form.addEventListener("submit", updateBody);
    